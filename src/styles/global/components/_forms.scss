//* ================
//* Form Elements
//* ================
@use 'sass:color';
@use '../config';

// ================
// Form Fields

// Base Form Field Styles
%form-field {
    width: 100%;
    padding: clamp(config.$baseUnit * 0.5, 1vw, config.$baseUnit * 1.5);
    border: 1px solid;
    background: config.$c-white;
    border-radius: 0.4em;
    font-size: clamp(config.$baseUnit, 2vw, config.$baseUnit * 1.25);
    color: config.$c-blue-500;

    .type_telephone &,
    .type_ssn &,
    .type_date & {
        width: auto;

        // Min widths fix a sizing bug on iOS
        &[size='2'] {
            min-width: 3.25em;
        }

        &[size='3'] {
            min-width: 4.25em;
        }

        &[size='4'] {
            min-width: 5.25em;
        }
    }

    .error &,
    .val-flag & {
        border-color: config.$c-error;
    }

    &:focus {
        outline: none;
    }
}

// Text-like Inputs
input[type='email'],
input[type='number'],
input[type='password'],
input[type='tel'],
input[type='text'],
input[type='url'],
.StripeElement {
    @extend %form-field !optional;
    line-height: 1.2;
}

// Textarea
textarea {
    @extend %form-field !optional;
    overflow: auto !important;
    min-height: 8em;
    resize: vertical !important;
    line-height: 1.4;
}

// Select (dropdown)
select {
    @extend %form-field !optional;
    overflow: hidden;
    line-height: 1.2;
}

// Radio & Checkbox
input[type='radio'],
input[type='checkbox'] {
    float: left;
    width: 1em;
    height: 1em;
    margin: 0.5em 0 0 0;

    & ~ label,
    & ~ .rte-q-label {
        display: block;
        padding: 0.3125em 0 0.3125em 1.25rem;
        cursor: pointer;
        font-size: 0.9444em;
    }
}

@keyframes shake {
    0% {
        transform: translate(0);
    }
    20% {
        transform: translate(-10px, 0);
    }
    40% {
        transform: translate(10px, 0);
    }
    60% {
        transform: translate(-10px, 0);
    }
    80% {
        transform: translate(10px, 0);
    }
    100% {
        transform: translate(0);
    }
}

input.is-invalid {
    border-color: config.$c-error;
    background: color.adjust(config.$c-error, $lightness: 27%);

    & + span {
        color: config.$c-error;
        animation: shake 0.8s cubic-bezier(0.075, 0.82, 0.165, 1);
        display: block;
    }

    @media (prefers-color-scheme: light) {
        border-color: color.adjust(config.$c-error, $lightness: -30%);

        & + span {
            color: color.adjust(config.$c-error, $lightness: -30%);
        }
    }
}

label {
    color: config.$c-turquoise-500;

    & + .required {
        color: config.$c-error;
    }

    @media (prefers-color-scheme: light) {
        color: color.adjust(config.$c-malva-500, $lightness: -30%);

        & + .required {
            color: config.$c-error;
        }
    }
}
