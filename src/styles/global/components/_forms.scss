//* ================
//* Form Elements
//* ================
@use 'sass:color';
@use '../config';

// ================
// Form Fields

// Base Form Field Styles
%form-field {
    width: 100%;
    padding: clamp(config.$baseUnit * 0.5, 1vw, config.$baseUnit * 1.5);
    border: 1px solid;
    background: config.$c-white;
    border-radius: 0.4em;
    font-size: clamp(config.$baseUnit, 2vw, config.$baseUnit * 1.25);
    color: config.$c-blue-500;

    .type_telephone &,
    .type_ssn &,
    .type_date & {
        width: auto;

        // Min widths fix a sizing bug on iOS
        &[size='2'] {
            min-width: 3.25em;
        }

        &[size='3'] {
            min-width: 4.25em;
        }

        &[size='4'] {
            min-width: 5.25em;
        }
    }

    .error &,
    .val-flag & {
        border-color: config.$c-error;
    }

    &:focus {
        outline: none;
    }
}

// Text-like Inputs
input[type='email'],
input[type='number'],
input[type='password'],
input[type='tel'],
input[type='text'],
input[type='url'] {
    @extend %form-field !optional;
    line-height: 1.2;

    &.is-invalid {
        animation: shake 0.52s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
        transform: translate3d(0, 0, 0);
        backface-visibility: hidden;
        perspective: 1000px;
        border-color: config.$c-error;
    }
}

// Textarea
textarea {
    @extend %form-field !optional;
    overflow: auto !important;
    min-height: 8em;
    resize: vertical !important;
    line-height: 1.4;
}

// Select (dropdown)
select {
    @extend %form-field !optional;
    overflow: hidden;
    line-height: 1.2;
}

// Radio & Checkbox
input[type='radio'],
input[type='checkbox'] {
    float: left;
    width: 1em;
    height: 1em;
    margin: 0.5em 0 0 0;

    & ~ label,
    & ~ .rte-q-label {
        display: block;
        padding: 0.3125em 0 0.3125em 1.25rem;
        cursor: pointer;
        font-size: 0.9444em;
    }
}

@keyframes shake {
    0% {
        transform: translate(0);
    }
    20% {
        transform: translate(-10px, 0);
    }
    40% {
        transform: translate(10px, 0);
    }
    60% {
        transform: translate(-10px, 0);
    }
    80% {
        transform: translate(10px, 0);
    }
    100% {
        transform: translate(0);
    }
}

input.is-invalid {
    border-color: config.$c-error;
    background: color.adjust(config.$c-error, $lightness: 23%);

    & + span {
        color: config.$c-error;
        animation: shake 0.5s cubic-bezier(0.075, 0.82, 0.165, 1);
        display: block;
    }

    @media (prefers-color-scheme: light) {
        border-color: color.adjust(config.$c-error, $lightness: -30%);

        & + span {
            color: color.adjust(config.$c-error, $lightness: -30%);
        }
    }
}

label {
    color: config.$c-turquoise-500;
    font-size: 0.9em;

    & + .required {
        color: config.$c-error;
    }

    @media (prefers-color-scheme: light) {
        color: color.adjust(config.$c-malva-500, $lightness: -30%);

        & + .required {
            color: config.$c-error;
        }
    }
}


div[aria-labelledby="checkbox-group"]{
    padding-block: 0.5em;
    label{
        display: flex;
        flex-flow: row wrap;
        align-items: flex-start;
        gap: 2rem;

        & > div{
            // display: flex;
            // align-items: center;
            // flex: 1 0 7em;

            input{
                opacity: 0;
                width: 0;
                height: 0;

                &:checked + label::before{
                    background: config.$c-white;

                    @media (prefers-color-scheme: light) {
                        background: color.scale(config.$c-turquoise-500, $lightness: 60%);
                    }
                }

                &:checked + label::after{
                    content: config.$i-checkmark;
                    font-family: config.$f-icons;
                    position: absolute;
                    top: -0.3em;
                    left: 0.1em;
                    font-size: 1.4em;
                    font-weight: bold;
                    color: config.$c-orange-500;

                    // light mode
                    @media (prefers-color-scheme: light) {
                        color: config.$c-blue-500;
                    }
                }
            }

            label{
                position: relative;
                padding: 0 0 0 1.6em;
                color: config.$c-white;

                &::before{
                    content:"";
                    display: block;
                    width: 1.2em;
                    height: 1.2em;
                    background: config.$c-white;
                    border: 1px solid config.$c-blue-500;
                    position: absolute;
                    top: 0.1em;
                    left: 0;
                    border-radius: 0.2em;
                }

                @media (prefers-color-scheme: light) {
                    color: config.$c-blue-800;
                }
            }
        }
    }
}

#checkbox-group{
    color: config.$c-turquoise-500;

    @media (prefers-color-scheme: light) {
        color: color.adjust(config.$c-malva-500, $lightness: -30%);
    }
}

.text_optin{
    display: flex;
    flex-direction: row-reverse;
    align-items: flex-end;
    justify-content: flex-end;
    padding-left: 1.3em;
    position: relative;

    input[type="checkbox"]{
        & + label{
            text-indent: -999em;
            width: 100%;
            position: absolute;
            left: 0;
            bottom: 0.3em;

            &::before, &::after{
                text-indent: 0;
            }
        }
    }
}

.degree_level,
div[class*="program_of_interest"],
.area_of_interest{
    flex: 1 0 100% !important;
}